///   #CORE
/// This core file sets up lcccss’ most important setup variables. They
/// underpin a lot of how the framework functions and should be modified and
/// preconfigured with caution.
/// Base typographical styles and baseline grid. You need to define these values
/// in pixels: lcccss will convert them to more appropriate units.
$lcc-global-font-size: 16px !default;
$lcc-global-line-height: 24px !default;

/// Spacing values are determined based on your project’s global line height (i.e
/// your baseline grid). It is not recommended that you modify these following
/// variables (it can break your vertical rhythm), but if you need to, you can.
$lcc-global-spacing-unit: round($lcc-global-line-height) !default;

/// How many times larger/smaller than the default should our spacing unit
/// variants be?
$lcc-global-spacing-unit-factor-tiny: 0.25 !default;
$lcc-global-spacing-unit-factor-small: 0.5 !default;
$lcc-global-spacing-unit-factor-large: 2 !default;
$lcc-global-spacing-unit-factor-huge: 4 !default;

/// Check that the chosen font rules are pixel numbers.
@each $_lcc-font-globals in $lcc-global-font-size $lcc-global-line-height {

  @if (type-of($_lcc-font-globals) == number) {

    @if (unit($_lcc-font-globals) != "px") {
      @error "`#{$_lcc-font-globals}` needs to be a pixel value.";
    }

  } @else {
    @error "`#{$_lcc-font-globals}` needs to be a number.";
  }

}

/// Check that the chosen size factors are unitless numbers.

@each $_lcc-spacing-unit in $lcc-global-spacing-unit-factor-tiny $lcc-global-spacing-unit-factor-small $lcc-global-spacing-unit-factor-large $lcc-global-spacing-unit-factor-huge {

  @if (type-of($_lcc-spacing-unit) == number) {

    @if (unitless($_lcc-spacing-unit) == false) {
      @error "`#{$_lcc-spacing-unit}` needs to be unitless.";
    }

  } @else {
    @error "`#{$_lcc-spacing-unit}` needs to be a number.";
  }

}

/// Private/framework-only reassignment. Do not alter anything below.

$lcc-global-spacing-unit-tiny: round($lcc-global-spacing-unit * $lcc-global-spacing-unit-factor-tiny);
$lcc-global-spacing-unit-small: round($lcc-global-spacing-unit * $lcc-global-spacing-unit-factor-small);
$lcc-global-spacing-unit-large: round($lcc-global-spacing-unit * $lcc-global-spacing-unit-factor-large);
$lcc-global-spacing-unit-huge: round($lcc-global-spacing-unit * $lcc-global-spacing-unit-factor-huge);
