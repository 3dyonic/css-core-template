/// Function that takes a $key value from the style-guide map that is defined in global-config.
/// @param {map key} $key - style guide map key
/// @param {nested map key} $nested-key [null] - style guide nested map
/// @output 'style-guide' $key value using globally defined style-guide map
///
/// @example scss - color definition for .c-test using a style map that is has name from global config
/// //scss
/// .c-test {
///     color: style-guide(color, primary);
///     font-weight: style-guide(font-weight, light);
///   }
/// //css
///   .c-test {
///     color:blue;
///     font-weight: 300;
///   }
/// @todo: for now $nested-key is optional, need to check if we need a flat map or can assume it is always nested...
@function style-guide($key, $nested-key: null) {
  //TESTS FOR PRIMARY $map and $key
  //SUCCESS: producing $key when it is not a map
  //condition 1: FAILURE map is defined but key does not exist
  @if map-has-key(lcc-config-map(style-guide), $key) == false {
    @return false;
    @warn "$key does not exist in defined style guide map, but is used in function 'style-guide' instance ";
  }
  //condition 2: FAILURE map is defined, nested map is not, but value is a nested map
  @if (map-has-key(lcc-config-map(style-guide), $key) == true and type-of(map-get(lcc-config-map(style-guide), $key)) == map and $nested-key==null) {
    @return false;
    @warn "$key is a nested map but no $nested-key is defiend for function 'style-guide' instance";
  }
  //condition 3: SUCESS, primary map is defined, primary key exist and key is not a map.
  @if (map-has-key(lcc-config-map(style-guide), $key) == true and type-of(map-get(lcc-config-map(style-guide), $key)) != map and $nested-key==null) {
    @return map-get(lcc-config-map(style-guide), $key);
  }
  //TESTS FOR NESTED MAP ($key as map) and $nested-key(as its key)
  //SUCCESS producing a $nested-key while $key serves as a map.
  //condition 1: FAILURE $key is not a map so $nested-key can not exist
  @if (map-has-key(lcc-config-map(style-guide), $key) == true and type-of(map-get(lcc-config-map(style-guide), $key)) != map and $nested-key !=null) {
    @warn "$nested-key is defined but $key is not a map for function 'style-guide' instance";
    @return false;
  }
  //condition 2: FAILURE $key is a map but $nested-key does not exist
  @if (map-has-key(lcc-config-map(style-guide), $key) == true and type-of(map-get(lcc-config-map(style-guide), $key)) == map and $nested-key !=null and map-has-key(map-get(lcc-config-map(style-guide),$key),$nested-key)==false) {
    @warn "$nested-key does not exist for $key for style-guide-property mixin instance";
    @return false;
  }
  //condition 3: SUCESS $key is a map and $nested key exist;
  @if (map-has-key(lcc-config-map(style-guide), $key) == true and type-of(map-get(lcc-config-map(style-guide), $key)) == map and map-has-key(map-get(lcc-config-map(style-guide),$key),$nested-key)) {
    @return map-get(map-get(lcc-config-map(style-guide), $key), $nested-key);
  }
}
